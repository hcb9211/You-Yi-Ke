一，数学对象    
 <1>属性
    Math.PI:π
 <2>方法
   1，取绝对值：Math.abs(参数)
   2,四舍五入： Math.round(参数)
   3,向上取整：Math.ceil(参数);
   4,向下取整：Math.floor(参数)
   5，取最大值/最小值:Math.max/Math.min
   6,取随机数：Math.random()*范围;
   7，取一个数几次幂
       Math.pow(num,X)；
   8，平方根
   Math.sqrt(参数)
   9，指定小数四舍五入后保留的位数
    var num=23.3456;//number数值类型
      alert(num4.toFixed(2));
   10,三角函数
   a,正弦
      Math.sin(弧度)；结果为：（-1~1）
   b,余弦
      Math.cos(弧度)；结果为：（-1~1）
   c,正切
      Math.tan(弧度)；结果为：（-1~1）
   d,余切
      Math.cot(弧度)；结果为：（-1~1）
********************************************************
     弧度的计算公式：L=2*PI /360*角度
   例如：角度为30度

********************************************************
                                                            数组对象
 一，属性：
  1，length：字符出现的个数
  2，constructor  返回构造函数
二，方法：
  1，myarr.push(元素)
      向数组的末尾添加一个元素，返回值为数组的长度，返回值的类型为数值类型
      可以添加多个元素
  2，myarr.unshift(元素1，元素2，...)
       向数组的开头添加一个元素，返回值为数组的长度，返回值的类型为数值类型
  3，myarr.pop()
       从数组末尾删除一个元素，返回值为删除的元素   
  4，myarr.shift()
       从数组开头删除一个元素，返回值为删除的元素   
  5，万能的添加删除函数
      myarr.splice(index，元素1，元素2.....)
        a，index表示位数
        b，数量：如果是0，表示添加（splice）
        c，元素：如果数量是0，后面的元素表示要添加的；如果数量不是0，这些元素会替换了删除的元素
 **************************************************
函数的返回值：
      如果数量不是0，返回值为删除的元素
      如果数量是0，返回值为空白
********************************************************
   6，数组的转换
      myarr.join([分隔符])
      将数组转换成字符串，如果有分隔符，按分隔符转换，如果没有分隔符，默认","  返回值为字符串
    7，数组的分割
      myarr.slice(开始位置，结束位置)
       1,截取数组的某一部分，从指定的开始位置截取，从指定的结束位置之前结束
       2,如果结束位置没有传参数，截取是从指定的开始位置到数组的结尾
       3,支持负数的   -1表示最后一个。顺序从左到右
       4,返回值是截取出的数组
     8，数组的连接
     myarr.concat(数组1，数组2...)
       将一个数组组成一个新数组
     9.数组的排序
    myarr.sort([fun])//fun是回调函数
     a，默认是按ASCII码来排序的
     b，fun存在时，这个回调函数有两个参数：a,b
           当a>b;    从小到大排
           当a=b；  将数组倒序输出
           当a>b;    从大到小排
         返回值为一个新的数组


                                                 字符串对象
   一，字符串对象的属性
    1，length
    2, constructor
   二，方法
  1，获取类型
   A。 mystr.charAt(num);  num：指定位置
       返回指定位置的字符
   B.mystr.charCodeAt(num)
       返回指定位置的ASCII码值
   C.String.fromCharCode(54);//6   97-a
           （这个方法是存储在静态区的，始终都在内存中存储）
       根据指定的编码返回相应的字符
  2，查找类型
    A. mystr.indexOf(字符)
           返回指定字符在字符串中第一次出现的位置
           结果为-1时，表示没找到
    B.mystr.lastIndexOf(字符)
           返回指定字符在字符串中最后一次出现的位置
           结果为-1时，表示没找到
    C.mystr.match(字符)   （正则也会用到）
           如果字符能在字符串中找到，结果还是这个字符；
           如果找不到，返回值为null
    D.mystr.replace("","")
            第一个参数，被替换的字符
            第二个参数，要替换的字符
           返回值为新字符串 
   3，截取类型
   A。mystr.slice(开始，结束)
   B. mystr.substring(开始，结束)   用法同A，只是不支持负数，写了-1会默认为0
        返回值为字符串
   C. mystr.substr(开始，长度)
        开始：表示从哪里开始
        长度：表示要截取几个字符的长度（个数）
        如果长度省略，则从指定位置开始到末尾结束
        返回值为字符串
   4，转换类型
     1，转换成数组
         mystr.split(["分隔符"])，[length];
       "分隔符"：分隔符指定时应指定字符串中有的，如果字符串中没有该分隔符，会将整个字符串作为数组的第一个元素
                 length:指定转换成数组后，限定数组的长度
                 当分隔符与length都省略时，将整个字符串做为数组的第一个元素
      2，mystr.toLowerCase()  将大写转换为小写
          mystr.toUpperCase()  将小写转换为大写
   5，样式类型
        mystr.fontcolor(): 指定字符颜色
        mystr.fontsize():指定字符大小










































